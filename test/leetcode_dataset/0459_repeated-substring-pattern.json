{
  "id": "459",
  "frontend_id": "459",
  "title": "Repeated Substring Pattern",
  "description": "Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.\n \nExample 1:\n\nInput: s = \"abab\"\nOutput: true\nExplanation: It is the substring \"ab\" twice.\n\nExample 2:\n\nInput: s = \"aba\"\nOutput: false\n\nExample 3:\n\nInput: s = \"abcabcabcabc\"\nOutput: true\nExplanation: It is the substring \"abc\" four times or the substring \"abcabc\" twice.\n\n \nConstraints:\n\n1 <= s.length <= 104\ns consists of lowercase English letters.\n\n",
  "difficulty": "Easy",
  "examples": [
    "\"abab\"",
    "\"aba\"",
    "\"abcabcabcabc\""
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "\"abab\""
      },
      "expected": "true"
    },
    {
      "input": {
        "s": "\"aba\""
      },
      "expected": "false"
    }
  ],
  "python_starter": "class Solution:\n    def repeatedSubstringPattern(self, s: str) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "repeatedSubstringPattern",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}