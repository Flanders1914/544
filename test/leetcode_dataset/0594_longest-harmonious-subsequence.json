{
  "id": "594",
  "frontend_id": "594",
  "title": "Longest Harmonious Subsequence",
  "description": "We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.\nGiven an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.\n \nExample 1:\n\nInput: nums = [1,3,2,2,5,2,3,7]\nOutput: 5\nExplanation:\nThe longest harmonious subsequence is [3,2,2,2,3].\n\nExample 2:\n\nInput: nums = [1,2,3,4]\nOutput: 2\nExplanation:\nThe longest harmonious subsequences are [1,2], [2,3], and [3,4], all of which have a length of 2.\n\nExample 3:\n\nInput: nums = [1,1,1,1]\nOutput: 0\nExplanation:\nNo harmonic subsequence exists.\n\n \nConstraints:\n\n1 <= nums.length <= 2 * 104\n-109 <= nums[i] <= 109\n\n",
  "difficulty": "Easy",
  "examples": [
    "[1,3,2,2,5,2,3,7]",
    "[1,2,3,4]",
    "[1,1,1,1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,3,2,2,5,2,3,7]"
      },
      "expected": "5"
    },
    {
      "input": {
        "nums": "[1,2,3,4]"
      },
      "expected": "2"
    },
    {
      "input": {
        "nums": "[1,1,1,1]"
      },
      "expected": "0"
    }
  ],
  "python_starter": "class Solution:\n    def findLHS(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findLHS",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}