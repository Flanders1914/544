{
  "id": "474",
  "frontend_id": "474",
  "title": "Ones and Zeroes",
  "description": "You are given an array of binary strings strs and two integers m and n.\nReturn the size of the largest subset of strs such that there are at most m 0's and n 1's in the subset.\nA set x is a subset of a set y if all elements of x are also elements of y.\n \nExample 1:\n\nInput: strs = [\"10\",\"0001\",\"111001\",\"1\",\"0\"], m = 5, n = 3\nOutput: 4\nExplanation: The largest subset with at most 5 0's and 3 1's is {\"10\", \"0001\", \"1\", \"0\"}, so the answer is 4.\nOther valid but smaller subsets include {\"0001\", \"1\"} and {\"10\", \"1\", \"0\"}.\n{\"111001\"} is an invalid subset because it contains 4 1's, greater than the maximum of 3.\n\nExample 2:\n\nInput: strs = [\"10\",\"0\",\"1\"], m = 1, n = 1\nOutput: 2\nExplanation: The largest subset is {\"0\", \"1\"}, so the answer is 2.\n\n \nConstraints:\n\n1 <= strs.length <= 600\n1 <= strs[i].length <= 100\nstrs[i] consists only of digits '0' and '1'.\n1 <= m, n <= 100\n\n",
  "difficulty": "Medium",
  "examples": [
    "[\"10\",\"0001\",\"111001\",\"1\",\"0\"]",
    "5",
    "3",
    "[\"10\",\"0\",\"1\"]",
    "1",
    "1"
  ],
  "structured_test_cases": [
    {
      "input": {
        "strs": "[\"10\",\"0001\",\"111001\",\"1\",\"0\"]",
        "m": "5",
        "n": "3"
      },
      "expected": "4"
    },
    {
      "input": {
        "strs": "[\"10\",\"0\",\"1\"]",
        "m": "1",
        "n": "1"
      },
      "expected": "2"
    }
  ],
  "python_starter": "class Solution:\n    def findMaxForm(self, strs: List[str], m: int, n: int) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findMaxForm",
    "params": [
      {
        "name": "strs",
        "type": "string[]"
      },
      {
        "name": "m",
        "type": "integer"
      },
      {
        "name": "n",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}