{
  "id": "197",
  "frontend_id": "197",
  "title": "Rising Temperature",
  "description": "Table: Weather\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| recordDate    | date    |\n| temperature   | int     |\n+---------------+---------+\nid is the column with unique values for this table.\nThere are no different rows with the same recordDate.\nThis table contains information about the temperature on a certain day.\n\n \nWrite a solution to find all dates' id with higher temperatures compared to its previous dates (yesterday).\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nWeather table:\n+----+------------+-------------+\n| id | recordDate | temperature |\n+----+------------+-------------+\n| 1  | 2015-01-01 | 10          |\n| 2  | 2015-01-02 | 25          |\n| 3  | 2015-01-03 | 20          |\n| 4  | 2015-01-04 | 30          |\n+----+------------+-------------+\nOutput: \n+----+\n| id |\n+----+\n| 2  |\n| 4  |\n+----+\nExplanation: \nIn 2015-01-02, the temperature was higher than the previous day (10 -> 25).\nIn 2015-01-04, the temperature was higher than the previous day (20 -> 30).\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\": {\"Weather\": [\"id\", \"recordDate\", \"temperature\"]}, \"rows\": {\"Weather\": [[1, \"2015-01-01\", 10], [2, \"2015-01-02\", 25], [3, \"2015-01-03\", 20], [4, \"2015-01-04\", 30]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "Weather table: +----+------------+-------------+ | id | recordDate | temperature | +----+------------+-------------+ | 1  | 2015-01-01 | 10          | | 2  | 2015-01-02 | 25          | | 3  | 2015-01-03 | 20          | | 4  | 2015-01-04 | 30          | +----+------------+-------------+"
      },
      "expected": "+----+"
    }
  ],
  "python_starter": null,
  "hints": [],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists Weather (id int, recordDate date, temperature int)"
    ],
    "mssql": [
      "Create table Weather (id int, recordDate date, temperature int)"
    ],
    "oraclesql": [
      "Create table Weather (id int, recordDate date, temperature int)",
      "ALTER SESSION SET nls_date_format='YYYY-MM-DD'"
    ],
    "database": true,
    "name": "rising_temperature",
    "pythondata": [
      "Weather = pd.DataFrame([], columns=['id', 'recordDate', 'temperature']).astype({'id':'Int64', 'recordDate':'datetime64[ns]', 'temperature':'Int64'})"
    ],
    "postgresql": [
      "Create table If Not Exists Weather (id int, recordDate date, temperature int)"
    ],
    "database_schema": {
      "Weather": {
        "id": "INT",
        "recordDate": "DATE",
        "temperature": "INT"
      }
    }
  }
}