{
  "id": "607",
  "frontend_id": "607",
  "title": "Sales Person",
  "description": "Table: SalesPerson\n\n+-----------------+---------+\n| Column Name     | Type    |\n+-----------------+---------+\n| sales_id        | int     |\n| name            | varchar |\n| salary          | int     |\n| commission_rate | int     |\n| hire_date       | date    |\n+-----------------+---------+\nsales_id is the primary key (column with unique values) for this table.\nEach row of this table indicates the name and the ID of a salesperson alongside their salary, commission rate, and hire date.\n\n \nTable: Company\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| com_id      | int     |\n| name        | varchar |\n| city        | varchar |\n+-------------+---------+\ncom_id is the primary key (column with unique values) for this table.\nEach row of this table indicates the name and the ID of a company and the city in which the company is located.\n\n \nTable: Orders\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| order_id    | int  |\n| order_date  | date |\n| com_id      | int  |\n| sales_id    | int  |\n| amount      | int  |\n+-------------+------+\norder_id is the primary key (column with unique values) for this table.\ncom_id is a foreign key (reference column) to com_id from the Company table.\nsales_id is a foreign key (reference column) to sales_id from the SalesPerson table.\nEach row of this table contains information about one order. This includes the ID of the company, the ID of the salesperson, the date of the order, and the amount paid.\n\n \nWrite a solution to find the names of all the salespersons who did not have any orders related to the company with the name \"RED\".\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nSalesPerson table:\n+----------+------+--------+-----------------+------------+\n| sales_id | name | salary | commission_rate | hire_date  |\n+----------+------+--------+-----------------+------------+\n| 1        | John | 100000 | 6               | 4/1/2006   |\n| 2        | Amy  | 12000  | 5               | 5/1/2010   |\n| 3        | Mark | 65000  | 12              | 12/25/2008 |\n| 4        | Pam  | 25000  | 25              | 1/1/2005   |\n| 5        | Alex | 5000   | 10              | 2/3/2007   |\n+----------+------+--------+-----------------+------------+\nCompany table:\n+--------+--------+----------+\n| com_id | name   | city     |\n+--------+--------+----------+\n| 1      | RED    | Boston   |\n| 2      | ORANGE | New York |\n| 3      | YELLOW | Boston   |\n| 4      | GREEN  | Austin   |\n+--------+--------+----------+\nOrders table:\n+----------+------------+--------+----------+--------+\n| order_id | order_date | com_id | sales_id | amount |\n+----------+------------+--------+----------+--------+\n| 1        | 1/1/2014   | 3      | 4        | 10000  |\n| 2        | 2/1/2014   | 4      | 5        | 5000   |\n| 3        | 3/1/2014   | 1      | 1        | 50000  |\n| 4        | 4/1/2014   | 1      | 4        | 25000  |\n+----------+------------+--------+----------+--------+\nOutput: \n+------+\n| name |\n+------+\n| Amy  |\n| Mark |\n| Alex |\n+------+\nExplanation: \nAccording to orders 3 and 4 in the Orders table, it is easy to tell that only salesperson John and Pam have sales to company RED, so we report all the other names in the table salesperson.\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\": {\"SalesPerson\": [\"sales_id\", \"name\", \"salary\", \"commission_rate\",\"hire_date\"], \"Company\": [\"com_id\", \"name\",\"city\"],\"Orders\":[\"order_id\",\"order_date\",\"com_id\",\"sales_id\",\"amount\"]}, \"rows\": {\"SalesPerson\": [[1, \"John\", 100000, 6, \"4/1/2006\"], [2, \"Amy\", 12000, 5,\"5/1/2010\"], [3, \"Mark\", 65000, 12, \"12/25/2008\"], [4, \"Pam\", 25000, 25,\"1/1/2005\"],[5,\"Alex\",5000,10,\"2/3/2007\"]], \"Company\": [[1, \"RED\",\"Boston\"], [2, \"ORANGE\", \"New York\"],[3, \"YELLOW\", \"Boston\"],[4, \"GREEN\", \"Austin\"]],\"Orders\":[[1,\"1/1/2014\",3,4,10000],[2, \"2/1/2014\", 4, 5, 5000],[3, \"3/1/2014\", 1, 1, 50000],[4, \"4/1/2014\", 1, 4, 25000]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "SalesPerson table: +----------+------+--------+-----------------+------------+ | sales_id | name | salary | commission_rate | hire_date  | +----------+------+--------+-----------------+------------+ | 1        | John | 100000 | 6               | 4/1/2006   | | 2        | Amy  | 12000  | 5               | 5/1/2010   | | 3        | Mark | 65000  | 12              | 12/25/2008 | | 4        | Pam  | 25000  | 25              | 1/1/2005   | | 5        | Alex | 5000   | 10              | 2/3/2007   | +----------+------+--------+-----------------+------------+ Company table: +--------+--------+----------+ | com_id | name   | city     | +--------+--------+----------+ | 1      | RED    | Boston   | | 2      | ORANGE | New York | | 3      | YELLOW | Boston   | | 4      | GREEN  | Austin   | +--------+--------+----------+ Orders table: +----------+------------+--------+----------+--------+ | order_id | order_date | com_id | sales_id | amount | +----------+------------+--------+----------+--------+ | 1        | 1/1/2014   | 3      | 4        | 10000  | | 2        | 2/1/2014   | 4      | 5        | 5000   | | 3        | 3/1/2014   | 1      | 1        | 50000  | | 4        | 4/1/2014   | 1      | 4        | 25000  | +----------+------------+--------+----------+--------+"
      },
      "expected": "+------+"
    }
  ],
  "python_starter": null,
  "hints": [
    "You need to query who sold to company 'RED' first, then output the sales person who is not in the first query result."
  ],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists SalesPerson (sales_id int, name varchar(255), salary int, commission_rate int, hire_date date)",
      "Create table If Not Exists Company (com_id int, name varchar(255), city varchar(255))",
      "Create table If Not Exists Orders (order_id int, order_date date, com_id int, sales_id int, amount int)"
    ],
    "mssql": [
      "Create table SalesPerson (sales_id int, name varchar(255), salary int, commission_rate int, hire_date date)",
      "Create table Company (com_id int, name varchar(255), city varchar(255))",
      "Create table Orders (order_id int, order_date date, com_id int, sales_id int, amount int)"
    ],
    "oraclesql": [
      "Create table SalesPerson (sales_id int, name varchar(255), salary int, commission_rate int, hire_date date)",
      "Create table Company (com_id int, name varchar(255), city varchar(255))",
      "Create table Orders (order_id int, order_date date, com_id int, sales_id int, amount int)",
      "Alter SESSION set NLS_DATE_FORMAT = 'MM/DD/YYYY'"
    ],
    "database": true,
    "name": "sales_person",
    "pythondata": [
      "SalesPerson = pd.DataFrame([], columns=['sales_id', 'name', 'salary', 'commission_rate', 'hire_date']).astype({'sales_id':'Int64', 'name':'object', 'salary':'Int64', 'commission_rate':'Int64', 'hire_date':'datetime64[ns]'})",
      "Company = pd.DataFrame([], columns=['com_id', 'name', 'city']).astype({'com_id':'Int64', 'name':'object', 'city':'object'})",
      "Orders = pd.DataFrame([], columns=['order_id', 'order_date', 'com_id', 'sales_id', 'amount']).astype({'order_id':'Int64', 'order_date':'datetime64[ns]', 'com_id':'Int64', 'sales_id':'Int64', 'amount':'Int64'})\n"
    ],
    "manual": false,
    "postgresql": [
      "Create table If Not Exists SalesPerson (sales_id int, name varchar(255), salary int, commission_rate int, hire_date date)",
      "Create table If Not Exists Company (com_id int, name varchar(255), city varchar(255))\n",
      "Create table If Not Exists Orders (order_id int, order_date date, com_id int, sales_id int, amount int)"
    ],
    "database_schema": {
      "SalesPerson": {
        "sales_id": "INT",
        "name": "VARCHAR(255)",
        "salary": "INT",
        "commission_rate": "INT",
        "hire_date": "DATE"
      },
      "Company": {
        "com_id": "INT",
        "name": "VARCHAR(255)",
        "city": "VARCHAR(255)"
      },
      "Orders": {
        "order_id": "INT",
        "order_date": "DATE",
        "com_id": "INT",
        "sales_id": "INT",
        "amount": "INT"
      }
    }
  }
}