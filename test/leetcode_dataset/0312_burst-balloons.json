{
  "id": "312",
  "frontend_id": "312",
  "title": "Burst Balloons",
  "description": "You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons.\nIf you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it.\nReturn the maximum coins you can collect by bursting the balloons wisely.\n \nExample 1:\n\nInput: nums = [3,1,5,8]\nOutput: 167\nExplanation:\nnums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167\nExample 2:\n\nInput: nums = [1,5]\nOutput: 10\n\n \nConstraints:\n\nn == nums.length\n1 <= n <= 300\n0 <= nums[i] <= 100\n\n",
  "difficulty": "Hard",
  "examples": [
    "[3,1,5,8]",
    "[1,5]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[3,1,5,8]"
      },
      "expected": "167"
    },
    {
      "input": {
        "nums": "[1,5]"
      },
      "expected": "10"
    }
  ],
  "python_starter": "class Solution:\n    def maxCoins(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "maxCoins",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}