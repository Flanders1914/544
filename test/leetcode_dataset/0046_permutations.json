{
  "id": "46",
  "frontend_id": "46",
  "title": "Permutations",
  "description": "Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.\n \nExample 1:\nInput: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\nExample 2:\nInput: nums = [0,1]\nOutput: [[0,1],[1,0]]\nExample 3:\nInput: nums = [1]\nOutput: [[1]]\n\n \nConstraints:\n\n1 <= nums.length <= 6\n-10 <= nums[i] <= 10\nAll the integers of nums are unique.\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,2,3]",
    "[0,1]",
    "[1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,2,3]"
      },
      "expected": "[[1,2,3]"
    }
  ],
  "python_starter": "class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "permute",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "colsize": "size_1",
      "dealloc": true
    }
  }
}