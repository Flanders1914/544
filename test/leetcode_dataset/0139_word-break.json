{
  "id": "139",
  "frontend_id": "139",
  "title": "Word Break",
  "description": "Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.\nNote that the same word in the dictionary may be reused multiple times in the segmentation.\n \nExample 1:\n\nInput: s = \"leetcode\", wordDict = [\"leet\",\"code\"]\nOutput: true\nExplanation: Return true because \"leetcode\" can be segmented as \"leet code\".\n\nExample 2:\n\nInput: s = \"applepenapple\", wordDict = [\"apple\",\"pen\"]\nOutput: true\nExplanation: Return true because \"applepenapple\" can be segmented as \"apple pen apple\".\nNote that you are allowed to reuse a dictionary word.\n\nExample 3:\n\nInput: s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]\nOutput: false\n\n \nConstraints:\n\n1 <= s.length <= 300\n1 <= wordDict.length <= 1000\n1 <= wordDict[i].length <= 20\ns and wordDict[i] consist of only lowercase English letters.\nAll the strings of wordDict are unique.\n\n",
  "difficulty": "Medium",
  "examples": [
    "\"leetcode\"",
    "[\"leet\",\"code\"]",
    "\"applepenapple\"",
    "[\"apple\",\"pen\"]",
    "\"catsandog\"",
    "[\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "\"leetcode\"",
        "wordDict": "[\"leet\",\"code\"]"
      },
      "expected": "true"
    },
    {
      "input": {
        "s": "\"applepenapple\"",
        "wordDict": "[\"apple\",\"pen\"]"
      },
      "expected": "true"
    },
    {
      "input": {
        "s": "\"catsandog\"",
        "wordDict": "[\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]"
      },
      "expected": "false"
    }
  ],
  "python_starter": "class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "wordBreak",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "name": "wordDict",
        "type": "list<string>"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}