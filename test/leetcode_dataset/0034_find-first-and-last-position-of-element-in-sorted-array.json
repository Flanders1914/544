{
  "id": "34",
  "frontend_id": "34",
  "title": "Find First and Last Position of Element in Sorted Array",
  "description": "Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.\nIf target is not found in the array, return [-1, -1].\nYou must write an algorithm with O(log n) runtime complexity.\n \nExample 1:\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\nExample 2:\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\nExample 3:\nInput: nums = [], target = 0\nOutput: [-1,-1]\n\n \nConstraints:\n\n0 <= nums.length <= 105\n-109 <= nums[i] <= 109\nnums is a non-decreasing array.\n-109 <= target <= 109\n\n",
  "difficulty": "Medium",
  "examples": [
    "[5,7,7,8,8,10]",
    "8",
    "[5,7,7,8,8,10]",
    "6",
    "[]",
    "0"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[5,7,7,8,8,10]",
        "target": "8"
      },
      "expected": "[3,4]"
    }
  ],
  "python_starter": "class Solution:\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "searchRange",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      },
      {
        "name": "target",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer[]"
    }
  }
}