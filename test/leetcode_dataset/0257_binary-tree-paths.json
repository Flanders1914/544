{
  "id": "257",
  "frontend_id": "257",
  "title": "Binary Tree Paths",
  "description": "Given the root of a binary tree, return all root-to-leaf paths in any order.\nA leaf is a node with no children.\n \nExample 1:\n\n\nInput: root = [1,2,3,null,5]\nOutput: [\"1->2->5\",\"1->3\"]\n\nExample 2:\n\nInput: root = [1]\nOutput: [\"1\"]\n\n \nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n-100 <= Node.val <= 100\n\n",
  "difficulty": "Easy",
  "examples": [
    "[1,2,3,null,5]",
    "[1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "root": "[1,2,3,null,5]"
      },
      "expected": "[1->2->5,1->3]"
    }
  ],
  "python_starter": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "binaryTreePaths",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<string>",
      "dealloc": true
    }
  }
}