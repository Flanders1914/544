{
  "id": "491",
  "frontend_id": "491",
  "title": "Non-decreasing Subsequences",
  "description": "Given an integer array nums, return all the different possible non-decreasing subsequences of the given array with at least two elements. You may return the answer in any order.\n \nExample 1:\n\nInput: nums = [4,6,7,7]\nOutput: [[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]\n\nExample 2:\n\nInput: nums = [4,4,3,2,1]\nOutput: [[4,4]]\n\n \nConstraints:\n\n1 <= nums.length <= 15\n-100 <= nums[i] <= 100\n\n",
  "difficulty": "Medium",
  "examples": [
    "[4,6,7,7]",
    "[4,4,3,2,1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[4,6,7,7]"
      },
      "expected": "[[4,6]"
    }
  ],
  "python_starter": "class Solution:\n    def findSubsequences(self, nums: List[int]) -> List[List[int]]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findSubsequences",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "dealloc": true
    }
  }
}