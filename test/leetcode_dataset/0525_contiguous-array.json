{
  "id": "525",
  "frontend_id": "525",
  "title": "Contiguous Array",
  "description": "Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1.\n \nExample 1:\n\nInput: nums = [0,1]\nOutput: 2\nExplanation: [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.\n\nExample 2:\n\nInput: nums = [0,1,0]\nOutput: 2\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n\nExample 3:\n\nInput: nums = [0,1,1,1,1,1,0,0,0]\nOutput: 6\nExplanation: [1,1,1,0,0,0] is the longest contiguous subarray with equal number of 0 and 1.\n\n \nConstraints:\n\n1 <= nums.length <= 105\nnums[i] is either 0 or 1.\n\n",
  "difficulty": "Medium",
  "examples": [
    "[0,1]",
    "[0,1,0]",
    "[0,1,1,1,1,1,0,0,0]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[0,1]"
      },
      "expected": "2"
    },
    {
      "input": {
        "nums": "[0,1,0]"
      },
      "expected": "2"
    },
    {
      "input": {
        "nums": "[0,1,1,1,1,1,0,0,0]"
      },
      "expected": "6"
    }
  ],
  "python_starter": "class Solution:\n    def findMaxLength(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findMaxLength",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}