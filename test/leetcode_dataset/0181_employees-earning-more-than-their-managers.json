{
  "id": "181",
  "frontend_id": "181",
  "title": "Employees Earning More Than Their Managers",
  "description": "Table: Employee\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| salary      | int     |\n| managerId   | int     |\n+-------------+---------+\nid is the primary key (column with unique values) for this table.\nEach row of this table indicates the ID of an employee, their name, salary, and the ID of their manager.\n\n \nWrite a solution to find the employees who earn more than their managers.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nEmployee table:\n+----+-------+--------+-----------+\n| id | name  | salary | managerId |\n+----+-------+--------+-----------+\n| 1  | Joe   | 70000  | 3         |\n| 2  | Henry | 80000  | 4         |\n| 3  | Sam   | 60000  | Null      |\n| 4  | Max   | 90000  | Null      |\n+----+-------+--------+-----------+\nOutput: \n+----------+\n| Employee |\n+----------+\n| Joe      |\n+----------+\nExplanation: Joe is the only employee who earns more than his manager.\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\": {\"Employee\": [\"id\", \"name\", \"salary\", \"managerId\"]}, \"rows\": {\"Employee\": [[1, \"Joe\", 70000, 3], [2, \"Henry\", 80000, 4], [3, \"Sam\", 60000, null], [4, \"Max\", 90000, null]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "Employee table: +----+-------+--------+-----------+ | id | name  | salary | managerId | +----+-------+--------+-----------+ | 1  | Joe   | 70000  | 3         | | 2  | Henry | 80000  | 4         | | 3  | Sam   | 60000  | Null      | | 4  | Max   | 90000  | Null      | +----+-------+--------+-----------+"
      },
      "expected": "+----------+"
    }
  ],
  "python_starter": null,
  "hints": [],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists Employee (id int, name varchar(255), salary int, managerId int)"
    ],
    "mssql": [
      "Create table Employee (id int, name varchar(255), salary int, managerId int)"
    ],
    "oraclesql": [
      "Create table Employee (id int, name varchar(255), salary int, managerId int)"
    ],
    "database": true,
    "name": "find_employees",
    "pythondata": [
      "Employee = pd.DataFrame([], columns=['id', 'name', 'salary', 'managerId']).astype({'id':'Int64', 'name':'object', 'salary':'Int64', 'managerId':'Int64'})\n"
    ],
    "postgresql": [
      "Create table If Not Exists Employee (id int, name varchar(255), salary int, managerId int)"
    ],
    "database_schema": {
      "Employee": {
        "id": "INT",
        "name": "VARCHAR(255)",
        "salary": "INT",
        "managerId": "INT"
      }
    }
  }
}