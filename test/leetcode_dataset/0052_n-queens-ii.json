{
  "id": "52",
  "frontend_id": "52",
  "title": "N-Queens II",
  "description": "The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\nGiven an integer n, return the number of distinct solutions to the n-queens puzzle.\n \nExample 1:\n\n\nInput: n = 4\nOutput: 2\nExplanation: There are two distinct solutions to the 4-queens puzzle as shown.\n\nExample 2:\n\nInput: n = 1\nOutput: 1\n\n \nConstraints:\n\n1 <= n <= 9\n\n",
  "difficulty": "Hard",
  "examples": [
    "4",
    "1"
  ],
  "structured_test_cases": [
    {
      "input": {
        "n": "4"
      },
      "expected": "2"
    },
    {
      "input": {
        "n": "1"
      },
      "expected": "1"
    }
  ],
  "python_starter": "class Solution:\n    def totalNQueens(self, n: int) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "totalNQueens",
    "params": [
      {
        "name": "n",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}