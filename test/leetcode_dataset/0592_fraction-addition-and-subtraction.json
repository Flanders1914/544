{
  "id": "592",
  "frontend_id": "592",
  "title": "Fraction Addition and Subtraction",
  "description": "Given a string expression representing an expression of fraction addition and subtraction, return the calculation result in string format.\nThe final result should be an irreducible fraction. If your final result is an integer, change it to the format of a fraction that has a denominator 1. So in this case, 2 should be converted to 2/1.\n \nExample 1:\n\nInput: expression = \"-1/2+1/2\"\nOutput: \"0/1\"\n\nExample 2:\n\nInput: expression = \"-1/2+1/2+1/3\"\nOutput: \"1/3\"\n\nExample 3:\n\nInput: expression = \"1/3-1/2\"\nOutput: \"-1/6\"\n\n \nConstraints:\n\nThe input string only contains '0' to '9', '/', '+' and '-'. So does the output.\nEach fraction (input and output) has the format ±numerator/denominator. If the first input fraction or the output is positive, then '+' will be omitted.\nThe input only contains valid irreducible fractions, where the numerator and denominator of each fraction will always be in the range [1, 10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.\nThe number of given fractions will be in the range [1, 10].\nThe numerator and denominator of the final result are guaranteed to be valid and in the range of 32-bit int.\n\n",
  "difficulty": "Medium",
  "examples": [
    "\"-1/2+1/2\"",
    "\"-1/2+1/2+1/3\"",
    "\"1/3-1/2\""
  ],
  "structured_test_cases": [
    {
      "input": {
        "expression": "\"-1/2+1/2\""
      },
      "expected": "0/1"
    }
  ],
  "python_starter": "class Solution:\n    def fractionAddition(self, expression: str) -> str:\n        ",
  "hints": [],
  "meta_data": {
    "name": "fractionAddition",
    "params": [
      {
        "name": "expression",
        "type": "string"
      }
    ],
    "return": {
      "type": "string"
    }
  }
}