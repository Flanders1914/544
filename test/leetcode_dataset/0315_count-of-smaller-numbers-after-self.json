{
  "id": "315",
  "frontend_id": "315",
  "title": "Count of Smaller Numbers After Self",
  "description": "Given an integer array nums, return an integer array counts where counts[i] is the number of smaller elements to the right of nums[i].\n \nExample 1:\n\nInput: nums = [5,2,6,1]\nOutput: [2,1,1,0]\nExplanation:\nTo the right of 5 there are 2 smaller elements (2 and 1).\nTo the right of 2 there is only 1 smaller element (1).\nTo the right of 6 there is 1 smaller element (1).\nTo the right of 1 there is 0 smaller element.\n\nExample 2:\n\nInput: nums = [-1]\nOutput: [0]\n\nExample 3:\n\nInput: nums = [-1,-1]\nOutput: [0,0]\n\n \nConstraints:\n\n1 <= nums.length <= 105\n-104 <= nums[i] <= 104\n\n",
  "difficulty": "Hard",
  "examples": [
    "[5,2,6,1]",
    "[-1]",
    "[-1,-1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[5,2,6,1]"
      },
      "expected": "[2,1,1,0]"
    },
    {
      "input": {
        "nums": "[-1]"
      },
      "expected": "[0]"
    }
  ],
  "python_starter": "class Solution:\n    def countSmaller(self, nums: List[int]) -> List[int]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "countSmaller",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "list<integer>",
      "dealloc": true
    }
  }
}