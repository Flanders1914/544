{
  "id": "100",
  "frontend_id": "100",
  "title": "Same Tree",
  "description": "Given the roots of two binary trees p and q, write a function to check if they are the same or not.\nTwo binary trees are considered the same if they are structurally identical, and the nodes have the same value.\n \nExample 1:\n\n\nInput: p = [1,2,3], q = [1,2,3]\nOutput: true\n\nExample 2:\n\n\nInput: p = [1,2], q = [1,null,2]\nOutput: false\n\nExample 3:\n\n\nInput: p = [1,2,1], q = [1,1,2]\nOutput: false\n\n \nConstraints:\n\nThe number of nodes in both trees is in the range [0, 100].\n-104 <= Node.val <= 104\n\n",
  "difficulty": "Easy",
  "examples": [
    "[1,2,3]",
    "[1,2,3]",
    "[1,2]",
    "[1,null,2]",
    "[1,2,1]",
    "[1,1,2]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "p": "[1,2,3]",
        "q": "[1,2,3]"
      },
      "expected": "true"
    }
  ],
  "python_starter": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "isSameTree",
    "params": [
      {
        "name": "p",
        "type": "TreeNode"
      },
      {
        "name": "q",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}