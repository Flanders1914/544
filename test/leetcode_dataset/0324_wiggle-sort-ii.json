{
  "id": "324",
  "frontend_id": "324",
  "title": "Wiggle Sort II",
  "description": "Given an integer array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....\nYou may assume the input array always has a valid answer.\n \nExample 1:\n\nInput: nums = [1,5,1,1,6,4]\nOutput: [1,6,1,5,1,4]\nExplanation: [1,4,1,5,1,6] is also accepted.\n\nExample 2:\n\nInput: nums = [1,3,2,2,3,1]\nOutput: [2,3,1,3,1,2]\n\n \nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i] <= 5000\nIt is guaranteed that there will be an answer for the given input nums.\n\n \nFollow Up: Can you do it in O(n) time and/or in-place with O(1) extra space?",
  "difficulty": "Medium",
  "examples": [
    "[1,5,1,1,6,4]",
    "[1,3,2,2,3,1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,5,1,1,6,4]"
      },
      "expected": "[1,6,1,5,1,4]"
    },
    {
      "input": {
        "nums": "[1,3,2,2,3,1]"
      },
      "expected": "[2,3,1,3,1,2]"
    }
  ],
  "python_starter": "class Solution:\n    def wiggleSort(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        ",
  "hints": [],
  "meta_data": {
    "name": "wiggleSort",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "void"
    },
    "output": {
      "paramindex": 0
    },
    "manual": false
  }
}