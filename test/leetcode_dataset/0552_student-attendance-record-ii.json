{
  "id": "552",
  "frontend_id": "552",
  "title": "Student Attendance Record II",
  "description": "An attendance record for a student can be represented as a string where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:\n\n'A': Absent.\n'L': Late.\n'P': Present.\n\nAny student is eligible for an attendance award if they meet both of the following criteria:\n\nThe student was absent ('A') for strictly fewer than 2 days total.\nThe student was never late ('L') for 3 or more consecutive days.\n\nGiven an integer n, return the number of possible attendance records of length n that make a student eligible for an attendance award. The answer may be very large, so return it modulo 109 + 7.\n \nExample 1:\n\nInput: n = 2\nOutput: 8\nExplanation: There are 8 records with length 2 that are eligible for an award:\n\"PP\", \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\nOnly \"AA\" is not eligible because there are 2 absences (there need to be fewer than 2).\n\nExample 2:\n\nInput: n = 1\nOutput: 3\n\nExample 3:\n\nInput: n = 10101\nOutput: 183236316\n\n \nConstraints:\n\n1 <= n <= 105\n\n",
  "difficulty": "Hard",
  "examples": [
    "2",
    "1",
    "10101"
  ],
  "structured_test_cases": [
    {
      "input": {
        "n": "2"
      },
      "expected": "8"
    },
    {
      "input": {
        "n": "1"
      },
      "expected": "3"
    }
  ],
  "python_starter": "class Solution:\n    def checkRecord(self, n: int) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "checkRecord",
    "params": [
      {
        "name": "n",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}