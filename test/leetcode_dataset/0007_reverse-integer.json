{
  "id": "7",
  "frontend_id": "7",
  "title": "Reverse Integer",
  "description": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.\nAssume the environment does not allow you to store 64-bit integers (signed or unsigned).\n \nExample 1:\n\nInput: x = 123\nOutput: 321\n\nExample 2:\n\nInput: x = -123\nOutput: -321\n\nExample 3:\n\nInput: x = 120\nOutput: 21\n\n \nConstraints:\n\n-231 <= x <= 231 - 1\n\n",
  "difficulty": "Medium",
  "examples": [
    "123",
    "-123",
    "120"
  ],
  "structured_test_cases": [
    {
      "input": {
        "x": "123"
      },
      "expected": "321"
    }
  ],
  "python_starter": "class Solution:\n    def reverse(self, x: int) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "reverse",
    "params": [
      {
        "name": "x",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}