{
  "id": "65",
  "frontend_id": "65",
  "title": "Valid Number",
  "description": "Given a string s, return whether s is a valid number.\n\nFor example, all the following are valid numbers: \"2\", \"0089\", \"-0.1\", \"+3.14\", \"4.\", \"-.9\", \"2e10\", \"-90E3\", \"3e+7\", \"+6e-1\", \"53.5e93\", \"-123.456e789\", while the following are not valid numbers: \"abc\", \"1a\", \"1e\", \"e3\", \"99e2.5\", \"--6\", \"-+3\", \"95a54e53\".\nFormally, a valid number is defined using one of the following definitions:\n\nAn integer number followed by an optional exponent.\nA decimal number followed by an optional exponent.\n\nAn integer number is defined with an optional sign '-' or '+' followed by digits.\nA decimal number is defined with an optional sign '-' or '+' followed by one of the following definitions:\n\nDigits followed by a dot '.'.\nDigits followed by a dot '.' followed by digits.\nA dot '.' followed by digits.\n\nAn exponent is defined with an exponent notation 'e' or 'E' followed by an integer number.\nThe digits are defined as one or more digits.\n \nExample 1:\n\nInput: s = \"0\"\nOutput: true\n\nExample 2:\n\nInput: s = \"e\"\nOutput: false\n\nExample 3:\n\nInput: s = \".\"\nOutput: false\n\n \nConstraints:\n\n1 <= s.length <= 20\ns consists of only English letters (both uppercase and lowercase), digits (0-9), plus '+', minus '-', or dot '.'.\n\n",
  "difficulty": "Hard",
  "examples": [
    "\"0\"",
    "\"e\"",
    "\".\""
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "\"0\""
      },
      "expected": "true"
    }
  ],
  "python_starter": "class Solution:\n    def isNumber(self, s: str) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "isNumber",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}