{
  "id": "78",
  "frontend_id": "78",
  "title": "Subsets",
  "description": "Given an integer array nums of unique elements, return all possible subsets (the power set).\nThe solution set must not contain duplicate subsets. Return the solution in any order.\n \nExample 1:\n\nInput: nums = [1,2,3]\nOutput: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n\nExample 2:\n\nInput: nums = [0]\nOutput: [[],[0]]\n\n \nConstraints:\n\n1 <= nums.length <= 10\n-10 <= nums[i] <= 10\nAll the numbers of nums are unique.\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,2,3]",
    "[0]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,2,3]"
      },
      "expected": "[[]"
    }
  ],
  "python_starter": "class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "subsets",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "dealloc": true
    }
  }
}