{
  "id": "40",
  "frontend_id": "40",
  "title": "Combination Sum II",
  "description": "Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\nEach number in candidates may only be used once in the combination.\nNote: The solution set must not contain duplicate combinations.\n \nExample 1:\n\nInput: candidates = [10,1,2,7,6,1,5], target = 8\nOutput: \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n\nExample 2:\n\nInput: candidates = [2,5,2,1,2], target = 5\nOutput: \n[\n[1,2,2],\n[5]\n]\n\n \nConstraints:\n\n1 <= candidates.length <= 100\n1 <= candidates[i] <= 50\n1 <= target <= 30\n\n",
  "difficulty": "Medium",
  "examples": [
    "[10,1,2,7,6,1,5]",
    "8",
    "[2,5,2,1,2]",
    "5"
  ],
  "structured_test_cases": [
    {
      "input": {
        "candidates": "[10,1,2,7,6,1,5]",
        "target": "8"
      },
      "expected": "["
    }
  ],
  "python_starter": "class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "combinationSum2",
    "params": [
      {
        "name": "candidates",
        "type": "integer[]"
      },
      {
        "name": "target",
        "type": "integer"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "dealloc": true
    }
  }
}