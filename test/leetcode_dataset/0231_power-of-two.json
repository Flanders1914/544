{
  "id": "231",
  "frontend_id": "231",
  "title": "Power of Two",
  "description": "Given an integer n, return true if it is a power of two. Otherwise, return false.\nAn integer n is a power of two, if there exists an integer x such that n == 2x.\n \nExample 1:\n\nInput: n = 1\nOutput: true\nExplanation: 20 = 1\n\nExample 2:\n\nInput: n = 16\nOutput: true\nExplanation: 24 = 16\n\nExample 3:\n\nInput: n = 3\nOutput: false\n\n \nConstraints:\n\n-231 <= n <= 231 - 1\n\n \nFollow up: Could you solve it without loops/recursion?",
  "difficulty": "Easy",
  "examples": [
    "1",
    "16",
    "3"
  ],
  "structured_test_cases": [
    {
      "input": {
        "n": "1"
      },
      "expected": "true"
    },
    {
      "input": {
        "n": "16"
      },
      "expected": "true"
    },
    {
      "input": {
        "n": "3"
      },
      "expected": "false"
    }
  ],
  "python_starter": "class Solution:\n    def isPowerOfTwo(self, n: int) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "isPowerOfTwo",
    "params": [
      {
        "name": "n",
        "type": "integer"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}