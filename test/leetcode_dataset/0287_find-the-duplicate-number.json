{
  "id": "287",
  "frontend_id": "287",
  "title": "Find the Duplicate Number",
  "description": "Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.\nThere is only one repeated number in nums, return this repeated number.\nYou must solve the problem without modifying the array nums and using only constant extra space.\n \nExample 1:\n\nInput: nums = [1,3,4,2,2]\nOutput: 2\n\nExample 2:\n\nInput: nums = [3,1,3,4,2]\nOutput: 3\n\nExample 3:\n\nInput: nums = [3,3,3,3,3]\nOutput: 3\n \nConstraints:\n\n1 <= n <= 105\nnums.length == n + 1\n1 <= nums[i] <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times.\n\n \nFollow up:\n\nHow can we prove that at least one duplicate number must exist in nums?\nCan you solve the problem in linear runtime complexity?\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,3,4,2,2]",
    "[3,1,3,4,2]",
    "[3,3,3,3,3]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,3,4,2,2]"
      },
      "expected": "2"
    }
  ],
  "python_starter": "class Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findDuplicate",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}