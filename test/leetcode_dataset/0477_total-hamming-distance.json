{
  "id": "477",
  "frontend_id": "477",
  "title": "Total Hamming Distance",
  "description": "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\nGiven an integer array nums, return the sum of Hamming distances between all the pairs of the integers in nums.\n \nExample 1:\n\nInput: nums = [4,14,2]\nOutput: 6\nExplanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case).\nThe answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n\nExample 2:\n\nInput: nums = [4,14,4]\nOutput: 4\n\n \nConstraints:\n\n1 <= nums.length <= 104\n0 <= nums[i] <= 109\nThe answer for the given input will fit in a 32-bit integer.\n\n",
  "difficulty": "Medium",
  "examples": [
    "[4,14,2]",
    "[4,14,4]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[4,14,2]"
      },
      "expected": "6"
    },
    {
      "input": {
        "nums": "[4,14,4]"
      },
      "expected": "4"
    }
  ],
  "python_starter": "class Solution:\n    def totalHammingDistance(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "totalHammingDistance",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}