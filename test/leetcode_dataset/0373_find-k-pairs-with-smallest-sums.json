{
  "id": "373",
  "frontend_id": "373",
  "title": "Find K Pairs with Smallest Sums",
  "description": "You are given two integer arrays nums1 and nums2 sorted in non-decreasing order and an integer k.\nDefine a pair (u, v) which consists of one element from the first array and one element from the second array.\nReturn the k pairs (u1, v1), (u2, v2), ..., (uk, vk) with the smallest sums.\n \nExample 1:\n\nInput: nums1 = [1,7,11], nums2 = [2,4,6], k = 3\nOutput: [[1,2],[1,4],[1,6]]\nExplanation: The first 3 pairs are returned from the sequence: [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n\nExample 2:\n\nInput: nums1 = [1,1,2], nums2 = [1,2,3], k = 2\nOutput: [[1,1],[1,1]]\nExplanation: The first 2 pairs are returned from the sequence: [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n\n \nConstraints:\n\n1 <= nums1.length, nums2.length <= 105\n-109 <= nums1[i], nums2[i] <= 109\nnums1 and nums2 both are sorted in non-decreasing order.\n1 <= k <= 104\nk <= nums1.length * nums2.length\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,7,11]",
    "[2,4,6]",
    "3",
    "[1,1,2]",
    "[1,2,3]",
    "2"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums1": "[1,7,11]",
        "nums2": "[2,4,6]",
        "k": "3"
      },
      "expected": "[[1,2]"
    },
    {
      "input": {
        "nums1": "[1,1,2]",
        "nums2": "[1,2,3]",
        "k": "2"
      },
      "expected": "[[1,1]"
    }
  ],
  "python_starter": "class Solution:\n    def kSmallestPairs(self, nums1: List[int], nums2: List[int], k: int) -> List[List[int]]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "kSmallestPairs",
    "params": [
      {
        "name": "nums1",
        "type": "integer[]"
      },
      {
        "name": "nums2",
        "type": "integer[]"
      },
      {
        "name": "k",
        "type": "integer"
      }
    ],
    "return": {
      "type": "list<list<integer>>"
    },
    "manual": false
  }
}