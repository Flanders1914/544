{
  "id": "513",
  "frontend_id": "513",
  "title": "Find Bottom Left Tree Value",
  "description": "Given the root of a binary tree, return the leftmost value in the last row of the tree.\n \nExample 1:\n\n\nInput: root = [2,1,3]\nOutput: 1\n\nExample 2:\n\n\nInput: root = [1,2,3,4,null,5,6,null,null,7]\nOutput: 7\n\n \nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-231 <= Node.val <= 231 - 1\n\n",
  "difficulty": "Medium",
  "examples": [
    "[2,1,3]",
    "[1,2,3,4,null,5,6,null,null,7]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "root": "[2,1,3]"
      },
      "expected": "1"
    }
  ],
  "python_starter": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findBottomLeftValue(self, root: Optional[TreeNode]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findBottomLeftValue",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}