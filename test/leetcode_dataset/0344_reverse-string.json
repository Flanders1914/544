{
  "id": "344",
  "frontend_id": "344",
  "title": "Reverse String",
  "description": "Write a function that reverses a string. The input string is given as an array of characters s.\nYou must do this by modifying the input array in-place with O(1) extra memory.\n \nExample 1:\nInput: s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\nOutput: [\"o\",\"l\",\"l\",\"e\",\"h\"]\nExample 2:\nInput: s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\nOutput: [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n\n \nConstraints:\n\n1 <= s.length <= 105\ns[i] is a printable ascii character.\n\n",
  "difficulty": "Easy",
  "examples": [
    "[\"h\",\"e\",\"l\",\"l\",\"o\"]",
    "[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "[\"h\",\"e\",\"l\",\"l\",\"o\"]"
      },
      "expected": "[o,l,l,e,h]"
    }
  ],
  "python_starter": "class Solution:\n    def reverseString(self, s: List[str]) -> None:\n        \"\"\"\n        Do not return anything, modify s in-place instead.\n        \"\"\"\n        ",
  "hints": [
    "The entire logic for reversing a string is based on using the opposite directional two-pointer approach!"
  ],
  "meta_data": {
    "name": "reverseString",
    "params": [
      {
        "name": "s",
        "type": "character[]"
      }
    ],
    "return": {
      "type": "void"
    },
    "output": {
      "paramindex": 0
    }
  }
}