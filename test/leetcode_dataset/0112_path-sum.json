{
  "id": "112",
  "frontend_id": "112",
  "title": "Path Sum",
  "description": "Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.\nA leaf is a node with no children.\n \nExample 1:\n\n\nInput: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\nOutput: true\nExplanation: The root-to-leaf path with the target sum is shown.\n\nExample 2:\n\n\nInput: root = [1,2,3], targetSum = 5\nOutput: false\nExplanation: There are two root-to-leaf paths in the tree:\n(1 --> 2): The sum is 3.\n(1 --> 3): The sum is 4.\nThere is no root-to-leaf path with sum = 5.\n\nExample 3:\n\nInput: root = [], targetSum = 0\nOutput: false\nExplanation: Since the tree is empty, there are no root-to-leaf paths.\n\n \nConstraints:\n\nThe number of nodes in the tree is in the range [0, 5000].\n-1000 <= Node.val <= 1000\n-1000 <= targetSum <= 1000\n\n",
  "difficulty": "Easy",
  "examples": [
    "[5,4,8,11,null,13,4,7,2,null,null,null,1]",
    "22",
    "[1,2,3]",
    "5",
    "[]",
    "0"
  ],
  "structured_test_cases": [
    {
      "input": {
        "root": "[5,4,8,11,null,13,4,7,2,null,null,null,1]",
        "targetSum": "22"
      },
      "expected": "true"
    },
    {
      "input": {
        "root": "[1,2,3]",
        "targetSum": "5"
      },
      "expected": "false"
    },
    {
      "input": {
        "root": "[]",
        "targetSum": "0"
      },
      "expected": "false"
    }
  ],
  "python_starter": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "hasPathSum",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      },
      {
        "name": "targetSum",
        "type": "integer"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}