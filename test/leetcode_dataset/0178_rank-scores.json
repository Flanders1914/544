{
  "id": "178",
  "frontend_id": "178",
  "title": "Rank Scores",
  "description": "Table: Scores\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| score       | decimal |\n+-------------+---------+\nid is the primary key (column with unique values) for this table.\nEach row of this table contains the score of a game. Score is a floating point value with two decimal places.\n\n \nWrite a solution to find the rank of the scores. The ranking should be calculated according to the following rules:\n\nThe scores should be ranked from the highest to the lowest.\nIf there is a tie between two scores, both should have the same ranking.\nAfter a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no holes between ranks.\n\nReturn the result table ordered by score in descending order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nScores table:\n+----+-------+\n| id | score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+\nOutput: \n+-------+------+\n| score | rank |\n+-------+------+\n| 4.00  | 1    |\n| 4.00  | 1    |\n| 3.85  | 2    |\n| 3.65  | 3    |\n| 3.65  | 3    |\n| 3.50  | 4    |\n+-------+------+\n\n",
  "difficulty": "Medium",
  "examples": [
    "{\"headers\": {\"Scores\": [\"id\", \"score\"]}, \"rows\": {\"Scores\": [[1, 3.50], [2, 3.65], [3, 4.00], [4, 3.85], [5, 4.00], [6, 3.65]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "Scores table: +----+-------+ | id | score | +----+-------+ | 1  | 3.50  | | 2  | 3.65  | | 3  | 4.00  | | 4  | 3.85  | | 5  | 4.00  | | 6  | 3.65  | +----+-------+"
      },
      "expected": "+-------+------+"
    }
  ],
  "python_starter": null,
  "hints": [],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists Scores (id int, score DECIMAL(3,2))"
    ],
    "mssql": [
      "Create table Scores (id int, score DECIMAL(3,2))"
    ],
    "oraclesql": [
      "Create table Scores (id int, score DECIMAL(3,2))"
    ],
    "database": true,
    "name": "order_scores",
    "pythondata": [
      "Scores = pd.DataFrame([], columns=['id', 'score']).astype({'id':'Int64', 'score':'Float64'})"
    ],
    "manual": false,
    "postgresql": [
      "Create table If Not Exists Scores (id int, score DECIMAL(3,2))"
    ],
    "database_schema": {
      "Scores": {
        "id": "INT",
        "score": "DECIMAL(3, 2)"
      }
    }
  }
}