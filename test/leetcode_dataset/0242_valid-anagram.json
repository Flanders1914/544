{
  "id": "242",
  "frontend_id": "242",
  "title": "Valid Anagram",
  "description": "Given two strings s and t, return true if t is an anagram of s, and false otherwise.\n \nExample 1:\n\nInput: s = \"anagram\", t = \"nagaram\"\nOutput: true\n\nExample 2:\n\nInput: s = \"rat\", t = \"car\"\nOutput: false\n\n \nConstraints:\n\n1 <= s.length, t.length <= 5 * 104\ns and t consist of lowercase English letters.\n\n \nFollow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?\n",
  "difficulty": "Easy",
  "examples": [
    "\"anagram\"",
    "\"nagaram\"",
    "\"rat\"",
    "\"car\""
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "\"anagram\"",
        "t": "\"nagaram\""
      },
      "expected": "true"
    }
  ],
  "python_starter": "class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "isAnagram",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "name": "t",
        "type": "string"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}