{
  "id": "23",
  "frontend_id": "23",
  "title": "Merge k Sorted Lists",
  "description": "You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.\nMerge all the linked-lists into one sorted linked-list and return it.\n \nExample 1:\n\nInput: lists = [[1,4,5],[1,3,4],[2,6]]\nOutput: [1,1,2,3,4,4,5,6]\nExplanation: The linked-lists are:\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\nmerging them into one sorted list:\n1->1->2->3->4->4->5->6\n\nExample 2:\n\nInput: lists = []\nOutput: []\n\nExample 3:\n\nInput: lists = [[]]\nOutput: []\n\n \nConstraints:\n\nk == lists.length\n0 <= k <= 104\n0 <= lists[i].length <= 500\n-104 <= lists[i][j] <= 104\nlists[i] is sorted in ascending order.\nThe sum of lists[i].length will not exceed 104.\n\n",
  "difficulty": "Hard",
  "examples": [
    "[[1,4,5],[1,3,4],[2,6]]",
    "[]",
    "[[]]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "lists": "[[1,4,5]"
      },
      "expected": "[1,1,2,3,4,4,5,6]"
    },
    {
      "input": {
        "lists": "[]"
      },
      "expected": "[]"
    }
  ],
  "python_starter": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "mergeKLists",
    "params": [
      {
        "name": "lists",
        "type": "ListNode[]",
        "dealloc": false
      }
    ],
    "return": {
      "type": "ListNode",
      "dealloc": true
    }
  }
}