{
  "id": "6",
  "frontend_id": "6",
  "title": "Zigzag Conversion",
  "description": "The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\nP   A   H   N\nA P L S I I G\nY   I   R\n\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows:\n\nstring convert(string s, int numRows);\n\n \nExample 1:\n\nInput: s = \"PAYPALISHIRING\", numRows = 3\nOutput: \"PAHNAPLSIIGYIR\"\n\nExample 2:\n\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n\nExample 3:\n\nInput: s = \"A\", numRows = 1\nOutput: \"A\"\n\n \nConstraints:\n\n1 <= s.length <= 1000\ns consists of English letters (lower-case and upper-case), ',' and '.'.\n1 <= numRows <= 1000\n\n",
  "difficulty": "Medium",
  "examples": [
    "\"PAYPALISHIRING\"",
    "3",
    "\"PAYPALISHIRING\"",
    "4",
    "\"A\"",
    "1"
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "\"PAYPALISHIRING\"",
        "numRows": "3"
      },
      "expected": "PAHNAPLSIIGYIR"
    },
    {
      "input": {
        "s": "\"A\"",
        "numRows": "1"
      },
      "expected": "A"
    }
  ],
  "python_starter": "class Solution:\n    def convert(self, s: str, numRows: int) -> str:\n        ",
  "hints": [],
  "meta_data": {
    "name": "convert",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "name": "numRows",
        "type": "integer"
      }
    ],
    "return": {
      "type": "string"
    }
  }
}