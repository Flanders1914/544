{
  "id": "456",
  "frontend_id": "456",
  "title": "132 Pattern",
  "description": "Given an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].\nReturn true if there is a 132 pattern in nums, otherwise, return false.\nÂ \nExample 1:\n\nInput: nums = [1,2,3,4]\nOutput: false\nExplanation: There is no 132 pattern in the sequence.\n\nExample 2:\n\nInput: nums = [3,1,4,2]\nOutput: true\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\n\nExample 3:\n\nInput: nums = [-1,3,2,0]\nOutput: true\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n\nÂ \nConstraints:\n\nn == nums.length\n1 <= n <= 2 * 105\n-109 <= nums[i] <= 109\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,2,3,4]",
    "[3,1,4,2]",
    "[-1,3,2,0]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,2,3,4]"
      },
      "expected": "false"
    },
    {
      "input": {
        "nums": "[3,1,4,2]"
      },
      "expected": "true"
    },
    {
      "input": {
        "nums": "[-1,3,2,0]"
      },
      "expected": "true"
    }
  ],
  "python_starter": "class Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "find132pattern",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}