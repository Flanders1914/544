{
  "id": "226",
  "frontend_id": "226",
  "title": "Invert Binary Tree",
  "description": "Given the root of a binary tree, invert the tree, and return its root.\n \nExample 1:\n\n\nInput: root = [4,2,7,1,3,6,9]\nOutput: [4,7,2,9,6,3,1]\n\nExample 2:\n\n\nInput: root = [2,1,3]\nOutput: [2,3,1]\n\nExample 3:\n\nInput: root = []\nOutput: []\n\n \nConstraints:\n\nThe number of nodes in the tree is in the range [0, 100].\n-100 <= Node.val <= 100\n\n",
  "difficulty": "Easy",
  "examples": [
    "[4,2,7,1,3,6,9]",
    "[2,1,3]",
    "[]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "root": "[4,2,7,1,3,6,9]"
      },
      "expected": "[4,7,2,9,6,3,1]"
    }
  ],
  "python_starter": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "invertTree",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "TreeNode"
    }
  }
}