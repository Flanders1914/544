{
  "id": "123",
  "frontend_id": "123",
  "title": "Best Time to Buy and Sell Stock III",
  "description": "You are given an array prices where prices[i] is the price of a given stock on the ith day.\nFind the maximum profit you can achieve. You may complete at most two transactions.\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n \nExample 1:\n\nInput: prices = [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\nThen buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\nExample 2:\n\nInput: prices = [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.\n\nExample 3:\n\nInput: prices = [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\n \nConstraints:\n\n1 <= prices.length <= 105\n0 <= prices[i] <= 105\n\n",
  "difficulty": "Hard",
  "examples": [
    "[3,3,5,0,0,3,1,4]",
    "[1,2,3,4,5]",
    "[7,6,4,3,1]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "prices": "[3,3,5,0,0,3,1,4]"
      },
      "expected": "6"
    },
    {
      "input": {
        "prices": "[1,2,3,4,5]"
      },
      "expected": "4"
    },
    {
      "input": {
        "prices": "[7,6,4,3,1]"
      },
      "expected": "0"
    }
  ],
  "python_starter": "class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "maxProfit",
    "params": [
      {
        "name": "prices",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}