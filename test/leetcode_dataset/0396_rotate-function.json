{
  "id": "396",
  "frontend_id": "396",
  "title": "Rotate Function",
  "description": "You are given an integer array nums of length n.\nAssume arrk to be an array obtained by rotating nums by k positions clock-wise. We define the rotation function F on nums as follow:\n\nF(k) = 0 * arrk[0] + 1 * arrk[1] + ... + (n - 1) * arrk[n - 1].\n\nReturn the maximum value of F(0), F(1), ..., F(n-1).\nThe test cases are generated so that the answer fits in a 32-bit integer.\n \nExample 1:\n\nInput: nums = [4,3,2,6]\nOutput: 26\nExplanation:\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\n\nExample 2:\n\nInput: nums = [100]\nOutput: 0\n\n \nConstraints:\n\nn == nums.length\n1 <= n <= 105\n-100 <= nums[i] <= 100\n\n",
  "difficulty": "Medium",
  "examples": [
    "[4,3,2,6]",
    "[100]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[4,3,2,6]"
      },
      "expected": "26"
    },
    {
      "input": {
        "nums": "[100]"
      },
      "expected": "0"
    }
  ],
  "python_starter": "class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "maxRotateFunction",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}