{
  "id": "523",
  "frontend_id": "523",
  "title": "Continuous Subarray Sum",
  "description": "Given an integer array nums and an integer k, return true if nums has a good subarray or false otherwise.\nA good subarray is a subarray where:\n\nits length is at least two, and\nthe sum of the elements of the subarray is a multiple of k.\n\nNote that:\n\nA subarray is a contiguous part of the array.\nAn integer x is a multiple of k if there exists an integer n such that x = n * k. 0 is always a multiple of k.\n\n \nExample 1:\n\nInput: nums = [23,2,4,6,7], k = 6\nOutput: true\nExplanation: [2, 4] is a continuous subarray of size 2 whose elements sum up to 6.\n\nExample 2:\n\nInput: nums = [23,2,6,4,7], k = 6\nOutput: true\nExplanation: [23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.\n42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.\n\nExample 3:\n\nInput: nums = [23,2,6,4,7], k = 13\nOutput: false\n\n \nConstraints:\n\n1 <= nums.length <= 105\n0 <= nums[i] <= 109\n0 <= sum(nums[i]) <= 231 - 1\n1 <= k <= 231 - 1\n\n",
  "difficulty": "Medium",
  "examples": [
    "[23,2,4,6,7]",
    "6",
    "[23,2,6,4,7]",
    "6",
    "[23,2,6,4,7]",
    "13"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[23,2,4,6,7]",
        "k": "6"
      },
      "expected": "true"
    },
    {
      "input": {
        "nums": "[23,2,6,4,7]",
        "k": "6"
      },
      "expected": "true"
    },
    {
      "input": {
        "nums": "[23,2,6,4,7]",
        "k": "13"
      },
      "expected": "false"
    }
  ],
  "python_starter": "class Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "checkSubarraySum",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      },
      {
        "name": "k",
        "type": "integer"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}