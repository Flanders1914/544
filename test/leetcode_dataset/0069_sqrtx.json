{
  "id": "69",
  "frontend_id": "69",
  "title": "Sqrt(x)",
  "description": "Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.\nYou must not use any built-in exponent function or operator.\n\nFor example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.\n\n \nExample 1:\n\nInput: x = 4\nOutput: 2\nExplanation: The square root of 4 is 2, so we return 2.\n\nExample 2:\n\nInput: x = 8\nOutput: 2\nExplanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.\n\n \nConstraints:\n\n0 <= x <= 231 - 1\n\n",
  "difficulty": "Easy",
  "examples": [
    "4",
    "8"
  ],
  "structured_test_cases": [
    {
      "input": {
        "x": "4"
      },
      "expected": "2"
    },
    {
      "input": {
        "x": "8"
      },
      "expected": "2"
    }
  ],
  "python_starter": "class Solution:\n    def mySqrt(self, x: int) -> int:\n        ",
  "hints": [
    "Try exploring all integers. (Credits: @annujoshi)",
    "Use the sorted property of integers to reduced the search space. (Credits: @annujoshi)"
  ],
  "meta_data": {
    "name": "mySqrt",
    "params": [
      {
        "name": "x",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}