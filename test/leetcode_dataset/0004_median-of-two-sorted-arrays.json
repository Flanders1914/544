{
  "id": "4",
  "frontend_id": "4",
  "title": "Median of Two Sorted Arrays",
  "description": "Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.\nThe overall run time complexity should be O(log (m+n)).\n \nExample 1:\n\nInput: nums1 = [1,3], nums2 = [2]\nOutput: 2.00000\nExplanation: merged array = [1,2,3] and median is 2.\n\nExample 2:\n\nInput: nums1 = [1,2], nums2 = [3,4]\nOutput: 2.50000\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n\n \nConstraints:\n\nnums1.length == m\nnums2.length == n\n0 <= m <= 1000\n0 <= n <= 1000\n1 <= m + n <= 2000\n-106 <= nums1[i], nums2[i] <= 106\n\n",
  "difficulty": "Hard",
  "examples": [
    "[1,3]",
    "[2]",
    "[1,2]",
    "[3,4]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums1": "[1,3]",
        "nums2": "[2]"
      },
      "expected": "2.00000"
    },
    {
      "input": {
        "nums1": "[1,2]",
        "nums2": "[3,4]"
      },
      "expected": "2.50000"
    }
  ],
  "python_starter": "class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findMedianSortedArrays",
    "params": [
      {
        "name": "nums1",
        "type": "integer[]"
      },
      {
        "name": "nums2",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "double"
    }
  }
}