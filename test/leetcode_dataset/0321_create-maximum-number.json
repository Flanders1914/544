{
  "id": "321",
  "frontend_id": "321",
  "title": "Create Maximum Number",
  "description": "You are given two integer arrays nums1 and nums2 of lengths m and n respectively. nums1 and nums2 represent the digits of two numbers. You are also given an integer k.\nCreate the maximum number of length k <= m + n from digits of the two numbers. The relative order of the digits from the same array must be preserved.\nReturn an array of the k digits representing the answer.\nÂ \nExample 1:\n\nInput: nums1 = [3,4,6,5], nums2 = [9,1,2,5,8,3], k = 5\nOutput: [9,8,6,5,3]\n\nExample 2:\n\nInput: nums1 = [6,7], nums2 = [6,0,4], k = 5\nOutput: [6,7,6,0,4]\n\nExample 3:\n\nInput: nums1 = [3,9], nums2 = [8,9], k = 3\nOutput: [9,8,9]\n\nÂ \nConstraints:\n\nm == nums1.length\nn == nums2.length\n1 <= m, n <= 500\n0 <= nums1[i], nums2[i] <= 9\n1 <= k <= m + n\nnums1 and nums2 do not have leading zeros.\n\n",
  "difficulty": "Hard",
  "examples": [
    "[3,4,6,5]",
    "[9,1,2,5,8,3]",
    "5",
    "[6,7]",
    "[6,0,4]",
    "5",
    "[3,9]",
    "[8,9]",
    "3"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums1": "[3,4,6,5]",
        "nums2": "[9,1,2,5,8,3]",
        "k": "5"
      },
      "expected": "[9,8,6,5,3]"
    }
  ],
  "python_starter": "class Solution:\n    def maxNumber(self, nums1: List[int], nums2: List[int], k: int) -> List[int]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "maxNumber",
    "params": [
      {
        "name": "nums1",
        "type": "integer[]"
      },
      {
        "name": "nums2",
        "type": "integer[]"
      },
      {
        "name": "k",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer[]"
    }
  }
}