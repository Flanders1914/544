{
  "id": "74",
  "frontend_id": "74",
  "title": "Search a 2D Matrix",
  "description": "You are given an m x n integer matrix matrix with the following two properties:\n\nEach row is sorted in non-decreasing order.\nThe first integer of each row is greater than the last integer of the previous row.\n\nGiven an integer target, return true if target is in matrix or false otherwise.\nYou must write a solution in O(log(m * n)) time complexity.\n \nExample 1:\n\n\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\nOutput: true\n\nExample 2:\n\n\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\nOutput: false\n\n \nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 100\n-104 <= matrix[i][j], target <= 104\n\n",
  "difficulty": "Medium",
  "examples": [
    "[[1,3,5,7],[10,11,16,20],[23,30,34,60]]",
    "3",
    "[[1,3,5,7],[10,11,16,20],[23,30,34,60]]",
    "13"
  ],
  "structured_test_cases": [
    {
      "input": {
        "matrix": "[[1,3,5,7]",
        "target": "3"
      },
      "expected": "true"
    }
  ],
  "python_starter": "class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        ",
  "hints": [],
  "meta_data": {
    "name": "searchMatrix",
    "params": [
      {
        "name": "matrix",
        "type": "integer[][]"
      },
      {
        "name": "target",
        "type": "integer"
      }
    ],
    "return": {
      "type": "boolean"
    }
  }
}