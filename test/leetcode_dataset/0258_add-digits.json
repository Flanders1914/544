{
  "id": "258",
  "frontend_id": "258",
  "title": "Add Digits",
  "description": "Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.\n \nExample 1:\n\nInput: num = 38\nOutput: 2\nExplanation: The process is\n38 --> 3 + 8 --> 11\n11 --> 1 + 1 --> 2 \nSince 2 has only one digit, return it.\n\nExample 2:\n\nInput: num = 0\nOutput: 0\n\n \nConstraints:\n\n0 <= num <= 231 - 1\n\n \nFollow up: Could you do it without any loop/recursion in O(1) runtime?\n",
  "difficulty": "Easy",
  "examples": [
    "38",
    "0"
  ],
  "structured_test_cases": [
    {
      "input": {
        "num": "38"
      },
      "expected": "2"
    },
    {
      "input": {
        "num": "0"
      },
      "expected": "0"
    }
  ],
  "python_starter": "class Solution:\n    def addDigits(self, num: int) -> int:\n        ",
  "hints": [
    "A naive implementation of the above process is trivial. Could you come up with other methods?",
    "What are all the possible results?",
    "How do they occur, periodically or randomly?",
    "You may find this <a href=\"https://en.wikipedia.org/wiki/Digital_root\" target=\"_blank\">Wikipedia article</a> useful."
  ],
  "meta_data": {
    "name": "addDigits",
    "params": [
      {
        "name": "num",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}