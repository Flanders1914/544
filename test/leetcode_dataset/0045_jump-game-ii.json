{
  "id": "45",
  "frontend_id": "45",
  "title": "Jump Game II",
  "description": "You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0].\nEach element nums[i] represents the maximum length of a forward jump from index i. In other words, if you are at nums[i], you can jump to any nums[i + j] where:\n\n0 <= j <= nums[i] and\ni + j < n\n\nReturn the minimum number of jumps to reach nums[n - 1]. The test cases are generated such that you can reach nums[n - 1].\n \nExample 1:\n\nInput: nums = [2,3,1,1,4]\nOutput: 2\nExplanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\nExample 2:\n\nInput: nums = [2,3,0,1,4]\nOutput: 2\n\n \nConstraints:\n\n1 <= nums.length <= 104\n0 <= nums[i] <= 1000\nIt's guaranteed that you can reach nums[n - 1].\n\n",
  "difficulty": "Medium",
  "examples": [
    "[2,3,1,1,4]",
    "[2,3,0,1,4]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[2,3,1,1,4]"
      },
      "expected": "2"
    },
    {
      "input": {
        "nums": "[2,3,0,1,4]"
      },
      "expected": "2"
    }
  ],
  "python_starter": "class Solution:\n    def jump(self, nums: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "jump",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}