{
  "id": "494",
  "frontend_id": "494",
  "title": "Target Sum",
  "description": "You are given an integer array nums and an integer target.\nYou want to build an expression out of nums by adding one of the symbols '+' and '-' before each integer in nums and then concatenate all the integers.\n\nFor example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression \"+2-1\".\n\nReturn the number of different expressions that you can build, which evaluates to target.\n \nExample 1:\n\nInput: nums = [1,1,1,1,1], target = 3\nOutput: 5\nExplanation: There are 5 ways to assign symbols to make the sum of nums be target 3.\n-1 + 1 + 1 + 1 + 1 = 3\n+1 - 1 + 1 + 1 + 1 = 3\n+1 + 1 - 1 + 1 + 1 = 3\n+1 + 1 + 1 - 1 + 1 = 3\n+1 + 1 + 1 + 1 - 1 = 3\n\nExample 2:\n\nInput: nums = [1], target = 1\nOutput: 1\n\n \nConstraints:\n\n1 <= nums.length <= 20\n0 <= nums[i] <= 1000\n0 <= sum(nums[i]) <= 1000\n-1000 <= target <= 1000\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,1,1,1,1]",
    "3",
    "[1]",
    "1"
  ],
  "structured_test_cases": [
    {
      "input": {
        "nums": "[1,1,1,1,1]",
        "target": "3"
      },
      "expected": "5"
    },
    {
      "input": {
        "nums": "[1]",
        "target": "1"
      },
      "expected": "1"
    }
  ],
  "python_starter": "class Solution:\n    def findTargetSumWays(self, nums: List[int], target: int) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "findTargetSumWays",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      },
      {
        "name": "target",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}