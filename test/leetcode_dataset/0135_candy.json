{
  "id": "135",
  "frontend_id": "135",
  "title": "Candy",
  "description": "There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.\nYou are giving candies to these children subjected to the following requirements:\n\nEach child must have at least one candy.\nChildren with a higher rating get more candies than their neighbors.\n\nReturn the minimum number of candies you need to have to distribute the candies to the children.\n \nExample 1:\n\nInput: ratings = [1,0,2]\nOutput: 5\nExplanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\n\nExample 2:\n\nInput: ratings = [1,2,2]\nOutput: 4\nExplanation: You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\nThe third child gets 1 candy because it satisfies the above two conditions.\n\n \nConstraints:\n\nn == ratings.length\n1 <= n <= 2 * 104\n0 <= ratings[i] <= 2 * 104\n\n",
  "difficulty": "Hard",
  "examples": [
    "[1,0,2]",
    "[1,2,2]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "ratings": "[1,0,2]"
      },
      "expected": "5"
    },
    {
      "input": {
        "ratings": "[1,2,2]"
      },
      "expected": "4"
    }
  ],
  "python_starter": "class Solution:\n    def candy(self, ratings: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "candy",
    "params": [
      {
        "name": "ratings",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}