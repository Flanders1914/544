{
  "id": "584",
  "frontend_id": "584",
  "title": "Find Customer Referee",
  "description": "Table: Customer\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| referee_id  | int     |\n+-------------+---------+\nIn SQL, id is the primary key column for this table.\nEach row of this table indicates the id of a customer, their name, and the id of the customer who referred them.\n\n \nFind the names of the customer that are not referred by the customer with id = 2.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nCustomer table:\n+----+------+------------+\n| id | name | referee_id |\n+----+------+------------+\n| 1  | Will | null       |\n| 2  | Jane | null       |\n| 3  | Alex | 2          |\n| 4  | Bill | null       |\n| 5  | Zack | 1          |\n| 6  | Mark | 2          |\n+----+------+------------+\nOutput: \n+------+\n| name |\n+------+\n| Will |\n| Jane |\n| Bill |\n| Zack |\n+------+\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\":{\"Customer\":[\"id\",\"name\",\"referee_id\"]},\"rows\":{\"Customer\":[[1,\"Will\",null],[2,\"Jane\",null],[3,\"Alex\",2],[4,\"Bill\",null],[5,\"Zack\",1],[6,\"Mark\",2]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "Customer table: +----+------+------------+ | id | name | referee_id | +----+------+------------+ | 1  | Will | null       | | 2  | Jane | null       | | 3  | Alex | 2          | | 4  | Bill | null       | | 5  | Zack | 1          | | 6  | Mark | 2          | +----+------+------------+"
      },
      "expected": "+------+"
    }
  ],
  "python_starter": null,
  "hints": [
    "Be careful of the NULL value"
  ],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists Customer (id int, name varchar(25), referee_id int)"
    ],
    "mssql": [
      "Create table Customer (id int, name varchar(25), referee_id int)"
    ],
    "oraclesql": [
      "Create table Customer (id int, name varchar(25), referee_id int)"
    ],
    "database": true,
    "name": "find_customer_referee",
    "pythondata": [
      "Customer = pd.DataFrame([], columns=['id', 'name', 'referee_id']).astype({'id':'Int64', 'name':'object', 'referee_id':'Int64'})"
    ],
    "postgresql": [
      "Create table If Not Exists Customer (id int, name varchar(25), referee_id int)"
    ],
    "database_schema": {
      "Customer": {
        "id": "INT",
        "name": "VARCHAR(25)",
        "referee_id": "INT"
      }
    }
  }
}