{
  "id": "61",
  "frontend_id": "61",
  "title": "Rotate List",
  "description": "Given the head of a linked list, rotate the list to the right by k places.\n \nExample 1:\n\n\nInput: head = [1,2,3,4,5], k = 2\nOutput: [4,5,1,2,3]\n\nExample 2:\n\n\nInput: head = [0,1,2], k = 4\nOutput: [2,0,1]\n\n \nConstraints:\n\nThe number of nodes in the list is in the range [0, 500].\n-100 <= Node.val <= 100\n0 <= k <= 2 * 109\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,2,3,4,5]",
    "2",
    "[0,1,2]",
    "4"
  ],
  "structured_test_cases": [
    {
      "input": {
        "head": "[1,2,3,4,5]",
        "k": "2"
      },
      "expected": "[4,5,1,2,3]"
    }
  ],
  "python_starter": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "rotateRight",
    "params": [
      {
        "name": "head",
        "type": "ListNode",
        "dealloc": false
      },
      {
        "name": "k",
        "type": "integer"
      }
    ],
    "return": {
      "type": "ListNode",
      "dealloc": true
    }
  }
}