{
  "id": "182",
  "frontend_id": "182",
  "title": "Duplicate Emails",
  "description": "Table: Person\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| email       | varchar |\n+-------------+---------+\nid is the primary key (column with unique values) for this table.\nEach row of this table contains an email. The emails will not contain uppercase letters.\n\n \nWrite a solution to report all the duplicate emails. Note that it's guaranteed that the email field is not NULL.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nPerson table:\n+----+---------+\n| id | email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\nOutput: \n+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+\nExplanation: a@b.com is repeated two times.\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\": {\"Person\": [\"id\", \"email\"]}, \"rows\": {\"Person\": [[1, \"a@b.com\"], [2, \"c@d.com\"], [3, \"a@b.com\"]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "Person table: +----+---------+ | id | email   | +----+---------+ | 1  | a@b.com | | 2  | c@d.com | | 3  | a@b.com | +----+---------+"
      },
      "expected": "+---------+"
    }
  ],
  "python_starter": null,
  "hints": [],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists Person (id int, email varchar(255))"
    ],
    "mssql": [
      "Create table Person (id int, email varchar(255))"
    ],
    "oraclesql": [
      "Create table Person (id int, email varchar(255))"
    ],
    "database": true,
    "name": "duplicate_emails",
    "pythondata": [
      "Person = pd.DataFrame([], columns=['id', 'email']).astype({'id':'Int64', 'email':'object'})"
    ],
    "postgresql": [
      "Create table If Not Exists Person (id int, email varchar(255))"
    ],
    "database_schema": {
      "Person": {
        "id": "INT",
        "email": "VARCHAR(255)"
      }
    }
  }
}