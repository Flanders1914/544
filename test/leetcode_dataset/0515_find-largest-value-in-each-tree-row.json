{
  "id": "515",
  "frontend_id": "515",
  "title": "Find Largest Value in Each Tree Row",
  "description": "Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n \nExample 1:\n\n\nInput: root = [1,3,2,5,3,null,9]\nOutput: [1,3,9]\n\nExample 2:\n\nInput: root = [1,2,3]\nOutput: [1,3]\n\n \nConstraints:\n\nThe number of nodes in the tree will be in the range [0, 104].\n-231 <= Node.val <= 231 - 1\n\n",
  "difficulty": "Medium",
  "examples": [
    "[1,3,2,5,3,null,9]",
    "[1,2,3]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "root": "[1,3,2,5,3,null,9]"
      },
      "expected": "[1,3,9]"
    }
  ],
  "python_starter": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def largestValues(self, root: Optional[TreeNode]) -> List[int]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "largestValues",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<integer>"
    }
  }
}