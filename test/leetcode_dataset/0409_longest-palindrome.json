{
  "id": "409",
  "frontend_id": "409",
  "title": "Longest Palindrome",
  "description": "Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.\nLetters are case sensitive, for example, \"Aa\" is not considered a palindrome.\n \nExample 1:\n\nInput: s = \"abccccdd\"\nOutput: 7\nExplanation: One longest palindrome that can be built is \"dccaccd\", whose length is 7.\n\nExample 2:\n\nInput: s = \"a\"\nOutput: 1\nExplanation: The longest palindrome that can be built is \"a\", whose length is 1.\n\n \nConstraints:\n\n1 <= s.length <= 2000\ns consists of lowercase and/or uppercase English letters only.\n\n",
  "difficulty": "Easy",
  "examples": [
    "\"abccccdd\"",
    "\"a\""
  ],
  "structured_test_cases": [
    {
      "input": {
        "s": "\"abccccdd\""
      },
      "expected": "7"
    },
    {
      "input": {
        "s": "\"a\""
      },
      "expected": "1"
    }
  ],
  "python_starter": "class Solution:\n    def longestPalindrome(self, s: str) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "longestPalindrome",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}