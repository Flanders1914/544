{
  "id": "148",
  "frontend_id": "148",
  "title": "Sort List",
  "description": "Given the head of a linked list, return the list after sorting it in ascending order.\n \nExample 1:\n\n\nInput: head = [4,2,1,3]\nOutput: [1,2,3,4]\n\nExample 2:\n\n\nInput: head = [-1,5,3,4,0]\nOutput: [-1,0,3,4,5]\n\nExample 3:\n\nInput: head = []\nOutput: []\n\n \nConstraints:\n\nThe number of nodes in the list is in the range [0, 5 * 104].\n-105 <= Node.val <= 105\n\n \nFollow up: Can you sort the linked list in O(n logn) time and O(1) memory (i.e. constant space)?\n",
  "difficulty": "Medium",
  "examples": [
    "[4,2,1,3]",
    "[-1,5,3,4,0]",
    "[]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "head": "[4,2,1,3]"
      },
      "expected": "[1,2,3,4]"
    }
  ],
  "python_starter": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def sortList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "sortList",
    "params": [
      {
        "name": "head",
        "type": "ListNode",
        "dealloc": false
      }
    ],
    "return": {
      "type": "ListNode",
      "dealloc": true
    }
  }
}