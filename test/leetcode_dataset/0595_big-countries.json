{
  "id": "595",
  "frontend_id": "595",
  "title": "Big Countries",
  "description": "Table: World\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| name        | varchar |\n| continent   | varchar |\n| area        | int     |\n| population  | int     |\n| gdp         | bigint  |\n+-------------+---------+\nname is the primary key (column with unique values) for this table.\nEach row of this table gives information about the name of a country, the continent to which it belongs, its area, the population, and its GDP value.\n\n \nA country is big if:\n\nit has an area of at least three million (i.e., 3000000 km2), or\nit has a population of at least twenty-five million (i.e., 25000000).\n\nWrite a solution to find the name, population, and area of the big countries.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nWorld table:\n+-------------+-----------+---------+------------+--------------+\n| name        | continent | area    | population | gdp          |\n+-------------+-----------+---------+------------+--------------+\n| Afghanistan | Asia      | 652230  | 25500100   | 20343000000  |\n| Albania     | Europe    | 28748   | 2831741    | 12960000000  |\n| Algeria     | Africa    | 2381741 | 37100000   | 188681000000 |\n| Andorra     | Europe    | 468     | 78115      | 3712000000   |\n| Angola      | Africa    | 1246700 | 20609294   | 100990000000 |\n+-------------+-----------+---------+------------+--------------+\nOutput: \n+-------------+------------+---------+\n| name        | population | area    |\n+-------------+------------+---------+\n| Afghanistan | 25500100   | 652230  |\n| Algeria     | 37100000   | 2381741 |\n+-------------+------------+---------+\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\": {\"World\": [\"name\", \"continent\",\t\"area\",\t\"population\", \"gdp\"]}, \"rows\": {\"World\": [[\"Afghanistan\", \"Asia\", 652230, 25500100, 20343000000], [\"Albania\", \"Europe\", 28748, 2831741, 12960000000], [\"Algeria\", \"Africa\", 2381741, 37100000, 188681000000], [\"Andorra\", \"Europe\", 468, 78115,\t3712000000], [\"Angola\", \"Africa\", 1246700, 20609294, 100990000000]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "World table: +-------------+-----------+---------+------------+--------------+ | name        | continent | area    | population | gdp          | +-------------+-----------+---------+------------+--------------+ | Afghanistan | Asia      | 652230  | 25500100   | 20343000000  | | Albania     | Europe    | 28748   | 2831741    | 12960000000  | | Algeria     | Africa    | 2381741 | 37100000   | 188681000000 | | Andorra     | Europe    | 468     | 78115      | 3712000000   | | Angola      | Africa    | 1246700 | 20609294   | 100990000000 | +-------------+-----------+---------+------------+--------------+"
      },
      "expected": "+-------------+------------+---------+"
    }
  ],
  "python_starter": null,
  "hints": [],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists World (name varchar(255), continent varchar(255), area int, population int, gdp bigint)"
    ],
    "mssql": [
      "Create table World (name varchar(255), continent varchar(255), area int, population int, gdp bigint)"
    ],
    "oraclesql": [
      "Create table World (name varchar(255), continent varchar(255), area int, population int, gdp int)"
    ],
    "database": true,
    "name": "big_countries",
    "pythondata": [
      "World = pd.DataFrame([], columns=['name', 'continent', 'area', 'population', 'gdp']).astype({'name':'object', 'continent':'object', 'area':'Int64', 'population':'Int64', 'gdp':'Int64'})"
    ],
    "manual": false,
    "postgresql": [
      "Create table If Not Exists World (name varchar(255), continent varchar(255), area int, population int, gdp bigint)"
    ],
    "database_schema": {
      "World": {
        "name": "VARCHAR(255)",
        "continent": "VARCHAR(255)",
        "area": "INT",
        "population": "INT",
        "gdp": "BIGINT"
      }
    }
  }
}