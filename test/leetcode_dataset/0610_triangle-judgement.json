{
  "id": "610",
  "frontend_id": "610",
  "title": "Triangle Judgement",
  "description": "Table: Triangle\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| x           | int  |\n| y           | int  |\n| z           | int  |\n+-------------+------+\nIn SQL, (x, y, z) is the primary key column for this table.\nEach row of this table contains the lengths of three line segments.\n\n \nReport for every three line segments whether they can form a triangle.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nTriangle table:\n+----+----+----+\n| x  | y  | z  |\n+----+----+----+\n| 13 | 15 | 30 |\n| 10 | 20 | 15 |\n+----+----+----+\nOutput: \n+----+----+----+----------+\n| x  | y  | z  | triangle |\n+----+----+----+----------+\n| 13 | 15 | 30 | No       |\n| 10 | 20 | 15 | Yes      |\n+----+----+----+----------+\n\n",
  "difficulty": "Easy",
  "examples": [
    "{\"headers\":{\"Triangle\":[\"x\",\"y\",\"z\"]},\"rows\":{\"Triangle\":[[13,15,30],[10,20,15]]}}"
  ],
  "structured_test_cases": [
    {
      "input": {
        "param0": "Triangle table: +----+----+----+ | x  | y  | z  | +----+----+----+ | 13 | 15 | 30 | | 10 | 20 | 15 | +----+----+----+"
      },
      "expected": "+----+----+----+----------+"
    }
  ],
  "python_starter": null,
  "hints": [],
  "meta_data": {
    "mysql": [
      "Create table If Not Exists Triangle (x int, y int, z int)"
    ],
    "mssql": [
      "Create table Triangle (x int, y int, z int)"
    ],
    "oraclesql": [
      "Create table Triangle (x int, y int, z int)"
    ],
    "database": true,
    "name": "triangle_judgement",
    "pythondata": [
      "Triangle = pd.DataFrame([], columns=['x', 'y', 'z']).astype({'x':'Int64', 'y':'Int64', 'z':'Int64'})"
    ],
    "postgresql": [
      "Create table If Not Exists Triangle (x int, y int, z int)"
    ],
    "database_schema": {
      "Triangle": {
        "x": "INT",
        "y": "INT",
        "z": "INT"
      }
    }
  }
}