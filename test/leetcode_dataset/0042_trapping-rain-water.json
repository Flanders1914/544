{
  "id": "42",
  "frontend_id": "42",
  "title": "Trapping Rain Water",
  "description": "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.\n \nExample 1:\n\n\nInput: height = [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\nExplanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n\nExample 2:\n\nInput: height = [4,2,0,3,2,5]\nOutput: 9\n\n \nConstraints:\n\nn == height.length\n1 <= n <= 2 * 104\n0 <= height[i] <= 105\n\n",
  "difficulty": "Hard",
  "examples": [
    "[0,1,0,2,1,0,1,3,2,1,2,1]",
    "[4,2,0,3,2,5]"
  ],
  "structured_test_cases": [
    {
      "input": {
        "height": "[0,1,0,2,1,0,1,3,2,1,2,1]"
      },
      "expected": "6"
    },
    {
      "input": {
        "height": "[4,2,0,3,2,5]"
      },
      "expected": "9"
    }
  ],
  "python_starter": "class Solution:\n    def trap(self, height: List[int]) -> int:\n        ",
  "hints": [],
  "meta_data": {
    "name": "trap",
    "params": [
      {
        "name": "height",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  }
}