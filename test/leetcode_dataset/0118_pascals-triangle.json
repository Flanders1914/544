{
  "id": "118",
  "frontend_id": "118",
  "title": "Pascal's Triangle",
  "description": "Given an integer numRows, return the first numRows of Pascal's triangle.\nIn Pascal's triangle, each number is the sum of the two numbers directly above it as shown:\n\n \nExample 1:\nInput: numRows = 5\nOutput: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\nExample 2:\nInput: numRows = 1\nOutput: [[1]]\n\n \nConstraints:\n\n1 <= numRows <= 30\n\n",
  "difficulty": "Easy",
  "examples": [
    "5",
    "1"
  ],
  "structured_test_cases": [
    {
      "input": {
        "numRows": "5"
      },
      "expected": "[[1]"
    }
  ],
  "python_starter": "class Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        ",
  "hints": [],
  "meta_data": {
    "name": "generate",
    "params": [
      {
        "name": "numRows",
        "type": "integer"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "dealloc": true,
      "rowsize": "param_1"
    }
  }
}