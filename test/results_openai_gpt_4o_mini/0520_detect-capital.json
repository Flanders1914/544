{
  "problem": {
    "id": "520",
    "frontend_id": "520",
    "title": "Detect Capital",
    "description": "We define the usage of capitals in a word to be right when one of the following cases holds:\n\nAll letters in this word are capitals, like \"USA\".\nAll letters in this word are not capitals, like \"leetcode\".\nOnly the first letter in this word is capital, like \"Google\".\n\nGiven a string word, return true if the usage of capitals in it is right.\n \nExample 1:\nInput: word = \"USA\"\nOutput: true\nExample 2:\nInput: word = \"FlaG\"\nOutput: false\n\n \nConstraints:\n\n1 <= word.length <= 100\nword consists of lowercase and uppercase English letters.\n\n",
    "difficulty": "Easy",
    "examples": [
      "\"USA\"",
      "\"FlaG\""
    ],
    "structured_test_cases": [
      {
        "input": {
          "word": "\"USA\""
        },
        "expected": "true"
      }
    ],
    "python_starter": "class Solution:\n    def detectCapitalUse(self, word: str) -> bool:\n        ",
    "hints": [],
    "meta_data": {
      "name": "detectCapitalUse",
      "params": [
        {
          "name": "word",
          "type": "string"
        }
      ],
      "return": {
        "type": "boolean"
      }
    }
  },
  "solution": {
    "code": "class Solution:\n    def detectCapitalUse(self, word: str) -> bool:\n        # Check if all characters are uppercase\n        if word.isupper():\n            return True\n        # Check if all characters are lowercase\n        if word.islower():\n            return True\n        # Check if only the first character is uppercase and the rest are lowercase\n        if word[0].isupper() and word[1:].islower():\n            return True\n        # If none of the conditions are met, return False\n        return False",
    "explanation": "The solution checks the capitalization of the input string `word` using three simple conditions:\n1. `word.isupper()`: This checks if all characters in the string are uppercase. If true, it returns `True`.\n2. `word.islower()`: This checks if all characters in the string are lowercase. If true, it returns `True`.\n3. `word[0].isupper() and word[1:].islower()`: This checks if the first character is uppercase and all subsequent characters are lowercase. If true, it returns `True`.\n\nIf none of these conditions are satisfied, the function returns `False`.\n\nThe time complexity of this solution is O(n), where n is the length of the string `word`, because each of the string methods (`isupper()`, `islower()`, and slicing) may need to traverse the entire string in the worst case. The space complexity is O(1) since we are using a constant amount of space regardless of the input size."
  },
  "test_result": {
    "success": true,
    "output": "Test case 1:\n[PASS] Test passed: True\n\n[PASS] All tests passed!\n"
  },
  "timestamp": "2025-04-01 18:01:22"
}