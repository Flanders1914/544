{
  "problem": {
    "id": "492",
    "frontend_id": "492",
    "title": "Construct the Rectangle",
    "description": "A web developer needs to know how to design a web page's size. So, given a specific rectangular web page’s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:\n\nThe area of the rectangular web page you designed must equal to the given target area.\nThe width W should not be larger than the length L, which means L >= W.\nThe difference between length L and width W should be as small as possible.\n\nReturn an array [L, W] where L and W are the length and width of the web page you designed in sequence.\n \nExample 1:\n\nInput: area = 4\nOutput: [2,2]\nExplanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\n\nExample 2:\n\nInput: area = 37\nOutput: [37,1]\n\nExample 3:\n\nInput: area = 122122\nOutput: [427,286]\n\n \nConstraints:\n\n1 <= area <= 107\n\n",
    "difficulty": "Easy",
    "examples": [
      "4",
      "37",
      "122122"
    ],
    "structured_test_cases": [
      {
        "input": {
          "area": "4"
        },
        "expected": "[2,2]"
      },
      {
        "input": {
          "area": "37"
        },
        "expected": "[37,1]"
      }
    ],
    "python_starter": "class Solution:\n    def constructRectangle(self, area: int) -> List[int]:\n        ",
    "hints": [
      "The W is always less than or equal to the square root of the area, so we start searching at sqrt(area) till we find the result."
    ],
    "meta_data": {
      "name": "constructRectangle",
      "params": [
        {
          "name": "area",
          "type": "integer"
        }
      ],
      "return": {
        "type": "integer[]"
      }
    }
  },
  "solution": {
    "code": "from typing import List\nimport math\n\nclass Solution:\n    def constructRectangle(self, area: int) -> List[int]:\n        # Start from the square root of the area and go downwards\n        for width in range(int(math.sqrt(area)), 0, -1):\n            if area % width == 0:  # Check if width is a factor of area\n                length = area // width  # Calculate the corresponding length\n                return [length, width]  # Return the length and width in the required order",
    "explanation": "The solution iterates from the integer value of the square root of the given area down to 1. This approach is efficient because it minimizes the number of iterations needed to find the factors of the area. \n\n1. **Time Complexity**: The time complexity of this solution is O(√area) because we only iterate from the square root of the area down to 1, checking for factors.\n2. **Space Complexity**: The space complexity is O(1) since we are using a constant amount of space for variables and the output list.\n\nBy starting from the square root, we ensure that the first valid pair (L, W) we find will have the smallest difference, thus satisfying the problem's requirements effectively."
  },
  "test_result": {
    "success": true,
    "output": "Test case 1:\n[PASS] Test passed: [2, 2]\nTest case 2:\n[PASS] Test passed: [37, 1]\n\n[PASS] All tests passed!\n"
  },
  "timestamp": "2025-04-01 18:01:20"
}